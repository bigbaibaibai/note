<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 不包含控制器 -->
	<context:component-scan
		base-package="com.mybatis">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 引入外部文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- ———————————————————————————————整合mybatis部分—————————————————————————————————————————— --> 
	
	<!-- 
		配置sqlSessionFactoryBean工厂，该Bean实现了Spring的FactoryBean接口，
		Spring能把它识别为工厂类，帮我们自动生成 很多sqlSessionFactory对象
	-->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 指定mybatis全局配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 指定mapper映射文件位置 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
	</bean>
	
	<!--  
	<bean id="employeeDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.mybatis.dao.EmployeeDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>-->
	<!-- 配置自动扫描的Mapper接口 -->
	<mybatis-spring:scan base-package="com.mybatis.dao"/>


	<!-- 配置一个可以执行批量操作的sqlSession -->
	<bean id="bacthSqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>

	<!-- ————————————————————————————————整合事务—————————————————————————————— -->
	<!-- 设置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 利用AOP全局配置事务 -->
	<aop:config>
		<!-- 设置重用表达式，所有修饰符 所有返回值 com.ssm.service包及子包下 所有类（所有参数） -->
		<aop:pointcut
			expression="execution(* com.ssm.service..*(..))" id="pointcut" />
		<!-- 引入外部切入，设置切入点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>

	<!-- 启用事务管理器管理方法 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<!-- 事务管理具体 -->
		<tx:attributes>
			<!-- 所有方法，默认配置 -->
			<tx:method name="*" />
			<!-- get*的方法，为只读，自动做调优 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>
